// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Passagens.Infra;

namespace Passagens.Infra.Migrations
{
    [DbContext(typeof(PassagensContext))]
    [Migration("20180608144022_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Passagens.Dominio.Entidades.ClasseDeVoo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<double>("ValorFixo");

                    b.Property<double>("ValorPorMilha");

                    b.HasKey("Id");

                    b.ToTable("ClasseDeVoo");
                });

            modelBuilder.Entity("Passagens.Dominio.Entidades.Local", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Local");
                });

            modelBuilder.Entity("Passagens.Dominio.Entidades.Opcional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired();

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<double>("Porcentagem");

                    b.HasKey("Id");

                    b.ToTable("Opcional");
                });

            modelBuilder.Entity("Passagens.Dominio.Entidades.OpcionalReserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OpcionalId")
                        .IsRequired();

                    b.Property<int?>("ReservaId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("OpcionalId");

                    b.HasIndex("ReservaId");

                    b.ToTable("OpcionalReserva");
                });

            modelBuilder.Entity("Passagens.Dominio.Entidades.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClasseDeVooId");

                    b.Property<int>("TrechoId");

                    b.Property<int?>("UsuarioId");

                    b.Property<double>("ValorTotalDoVoo");

                    b.HasKey("Id");

                    b.HasIndex("ClasseDeVooId");

                    b.HasIndex("TrechoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Reserva");
                });

            modelBuilder.Entity("Passagens.Dominio.Entidades.Trecho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DestinoId")
                        .IsRequired();

                    b.Property<double>("DistanciaTotal");

                    b.Property<int?>("OrigemId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("DestinoId");

                    b.HasIndex("OrigemId");

                    b.ToTable("Trecho");
                });

            modelBuilder.Entity("Passagens.Dominio.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<DateTime>("DataDeNascimento");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<bool>("IsAdmin");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("UltimoNome")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Passagens.Dominio.Entidades.OpcionalReserva", b =>
                {
                    b.HasOne("Passagens.Dominio.Entidades.Opcional", "Opcional")
                        .WithMany()
                        .HasForeignKey("OpcionalId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Passagens.Dominio.Entidades.Reserva", "Reserva")
                        .WithMany()
                        .HasForeignKey("ReservaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Passagens.Dominio.Entidades.Reserva", b =>
                {
                    b.HasOne("Passagens.Dominio.Entidades.ClasseDeVoo", "ClasseDeVoo")
                        .WithMany()
                        .HasForeignKey("ClasseDeVooId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Passagens.Dominio.Entidades.Trecho", "Trecho")
                        .WithMany()
                        .HasForeignKey("TrechoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Passagens.Dominio.Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("Passagens.Dominio.Entidades.Trecho", b =>
                {
                    b.HasOne("Passagens.Dominio.Entidades.Local", "Destino")
                        .WithMany()
                        .HasForeignKey("DestinoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Passagens.Dominio.Entidades.Local", "Origem")
                        .WithMany()
                        .HasForeignKey("OrigemId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
